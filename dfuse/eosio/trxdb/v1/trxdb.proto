syntax = "proto3";

package dfuse.eosio.trxdb.v1;

option go_package = "github.com/dfuse-io/dfuse-eosio/pb/dfuse/eosio/trxdb/v1;pbtrxdb";

import "dfuse/eosio/codec/v1/codec.proto";
import "google/protobuf/timestamp.proto";

message ImplicitTrxRow {
  // Primary key to include: transaction_id and block_id
  dfuse.eosio.codec.v1.SignedTransaction signed_trx = 1;
  string name = 2;
}

message TrxRow {
  // Primary key to include: transaction_id and block_id

  dfuse.eosio.codec.v1.SignedTransaction signed_trx = 1;
  dfuse.eosio.codec.v1.TransactionReceipt receipt = 2;
  dfuse.eosio.codec.v1.PublicKeys public_keys = 3;
}

message TrxTraceRow {
  // Primary key to include: transaction_id and block_id

  dfuse.eosio.codec.v1.TransactionTrace trx_trace = 1;
  dfuse.eosio.codec.v1.BlockHeader block_header = 2;
}

message DtrxRow {
  // Primary key to include: transaction_id and block_id

  dfuse.eosio.codec.v1.SignedTransaction signed_trx = 1;
  dfuse.eosio.codec.v1.ExtDTrxOp created_by = 2;
  dfuse.eosio.codec.v1.ExtDTrxOp canceled_by = 3;
}

message BlockRow {
  // Key will be block_id

  // We want another index also:
  //    blockTime:blockID = \01

  dfuse.eosio.codec.v1.Block block = 1;
  dfuse.eosio.codec.v1.TransactionRefs implicit_trx_refs = 2;
  dfuse.eosio.codec.v1.TransactionRefs trx_refs = 3;
  dfuse.eosio.codec.v1.TransactionRefs trace_refs = 4;
}

message AccountRow {
  // Key will be account:block_id    // block_id, block_num and account implicit in key
  string name = 1;
  string creator = 2;
  string block_id = 3;
  string trx_id = 4;
  google.protobuf.Timestamp block_time = 5;
}

enum IndexableRow {
  INDEXABLE_ROW_ACCOUNT = 0;
  INDEXABLE_ROW_BLOCK = 1;
  INDEXABLE_ROW_DTRX = 2;
  INDEXABLE_ROW_IMPLICIT_TRX = 3;
  INDEXABLE_ROW_TRX = 4;
  INDEXABLE_ROW_TRX_TRACE = 5;
  INDEXABLE_ROW_TIMELINE = 6;
}
